def coverings(s, edges, k,set):
    add_on = [index for index, item in enumerate(edges) if item[0] == s[-k + 1:]]

    if len(add_on) == 0 and edges==[]:
        return set.add(s)
    else:
        for i in add_on:
            coverings(s + edges[i][1][-1], edges[:i] + edges[i + 1:], k,set)

with open('test.txt') as input_data:
    k_mers = [line.strip() for line in input_data.readlines()]

k = len(k_mers[0])
edges = [[k_mer[0:k - 1], k_mer[1:k]] for k_mer in k_mers[1:]]

set=set()

coverings(k_mers[0], edges, k,set)

for i in set: #All circular strings assembled by complete cycles
    print(i[:len(k_mers)])
